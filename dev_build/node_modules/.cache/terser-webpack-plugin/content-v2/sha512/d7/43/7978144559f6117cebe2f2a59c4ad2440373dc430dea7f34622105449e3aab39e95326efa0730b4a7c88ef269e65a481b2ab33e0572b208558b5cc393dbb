{"map":"{\"version\":3,\"sources\":[\"/Users/christophertrinh/development/react/ventus/dev_build/src/App.js\",\"/Users/christophertrinh/development/react/ventus/dev_build/src/serviceWorker.js\",\"/Users/christophertrinh/development/react/ventus/dev_build/src/index.js\",\"/Users/christophertrinh/development/react/ventus/dev_build/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/christophertrinh/development/react/ventus/dev_build/src/placeholder.gif\"],\"names\":[\"Header\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"placeholder\",\"alt\",\"href\",\"target\",\"rel\",\"Component\",\"App\",\"App_Header\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\",\"module\",\"exports\",\"__webpack_require__\",\"p\"],\"mappings\":\"yOAIMA,0LAEF,OACEC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAKC,EAAAA,EAAaF,UAAU,WAAWG,IAAI,SAChDN,EAAAC,EAAAC,cAAA,IAAA,KAAA,oDAGAF,EAAAC,EAAAC,cAAA,IAAA,CACEC,UAAU,WACVI,KAAK,kCACLC,OAAO,SACPC,IAAI,uBAJN,mBAQAT,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,mBAjBJO,EAAAA,YA8CNC,mLApBX,OACEX,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACU,EAAD,OAEFZ,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KAAA,KAAA,UACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,6EACAF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,IAAA,KAAA,WACAF,EAAAC,EAAAC,cAAA,QAAA,MACAF,EAAAC,EAAAC,cAAA,IAAA,KAAA,aACAF,EAAAC,EAAAC,cAAA,QAAA,gBAdMQ,EAAAA,WChBEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOnB,EAAAC,EAAAC,cAACkB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport placeholder from './placeholder.gif';\\nimport './App.css';\\n\\nclass Header extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n          <img src={placeholder} className=\\\"App-logo\\\" alt=\\\"logo\\\" />\\n          <p>\\n            Welcome to Ventus! Currently under construction.\\n          </p>\\n          <a\\n            className=\\\"App-link\\\"\\n            href=\\\"https://github.com/updog/ventus\\\"\\n            target=\\\"_blank\\\"\\n            rel=\\\"noopener noreferrer\\\"\\n          >\\n            See our Github!\\n          </a>\\n          <div className=\\\"arrow\\\"></div>\\n        </header>\\n      </div>\\n    );\\n  }\\n}\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div>\\n        <div className=\\\"header\\\">\\n          <Header/>\\n        </div>\\n        <div className=\\\"splash\\\">\\n          <h1>Ventus</h1>\\n          <h2>A simple and effective chat application designed for university students.</h2>\\n          <div className=\\\"login\\\">\\n            <p>E-mail:</p>\\n            <input/>\\n            <p>Password:</p>\\n            <input/>\\n          </div>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\",\"module.exports = __webpack_public_path__ + \\\"static/media/placeholder.74c24282.gif\\\";\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,n){},16:function(e,t,n){},18:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),l=n(7),c=n.n(l),o=(n(14),n(1)),i=n(2),s=n(4),u=n(3),m=n(5),p=n(8),d=n.n(p),h=(n(16),function(e){function t(){return Object(o.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"header\",{className:\"App-header\"},r.a.createElement(\"img\",{src:d.a,className:\"App-logo\",alt:\"logo\"}),r.a.createElement(\"p\",null,\"Welcome to Ventus! Currently under construction.\"),r.a.createElement(\"a\",{className:\"App-link\",href:\"https://github.com/updog/ventus\",target:\"_blank\",rel:\"noopener noreferrer\"},\"See our Github!\"),r.a.createElement(\"div\",{className:\"arrow\"})))}}]),t}(a.Component)),E=function(e){function t(){return Object(o.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"header\"},r.a.createElement(h,null)),r.a.createElement(\"div\",{className:\"splash\"},r.a.createElement(\"h1\",null,\"Ventus\"),r.a.createElement(\"h2\",null,\"A simple and effective chat application designed for university students.\"),r.a.createElement(\"div\",{className:\"login\"},r.a.createElement(\"p\",null,\"E-mail:\"),r.a.createElement(\"input\",null),r.a.createElement(\"p\",null,\"Password:\"),r.a.createElement(\"input\",null))))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(E,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,n){e.exports=n.p+\"static/media/placeholder.74c24282.gif\"},9:function(e,t,n){e.exports=n(18)}},[[9,2,1]]]);","extractedComments":[]}